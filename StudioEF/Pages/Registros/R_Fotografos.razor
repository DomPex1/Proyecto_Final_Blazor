@page "/RFotografos"
@page "/RFotografos/{FotografoId:int}"

@using Models
@using BLL

@inject IToastService toast


<EditForm Model="Fotografo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro Fotografos</h3>
        </div>
        <div class="card-body">
            <form>


                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Fotografo Id:</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Fotografo.FotografoId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label>Usuario Id:</label>
                    <InputNumber @bind-Value="Fotografo.UsuarioId" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.UsuarioId)" />
                </div>


                <div class="form-group">
                    <label>Nombre:</label>
                    <InputText @bind-Value="Fotografo.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.Nombre)" />
                </div>

                <div class="form-group">
                    <label>Cedula:</label>
                    <InputText @bind-Value="Fotografo.Cedula" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.Cedula)" />
                </div>

                <div class="form-group">
                    <label>Direccion:</label>
                    <InputText @bind-Value="Fotografo.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.Direccion)" />
                </div>

                <div class="form-group">
                    <label>Telefono:</label>
                    <InputText @bind-Value="Fotografo.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.Telefono)" />
                </div>

                <div class="form-group">
                    <label>Celular:</label>
                    <InputText @bind-Value="Fotografo.Celular" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.Celular)" />
                </div>

                <div class="form-group">
                    <label>Sexo:</label>
                    <InputText @bind-Value="Fotografo.Sexo" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.Sexo)" />
                </div>

                <div class="form-group">
                    <label>Fecha de nacimiento:</label>
                    <InputDate @bind-Value="Fotografo.FechaNacimiento" class="form-control" />
                    <ValidationMessage For="@(() => Fotografo.FechaNacimiento)" />
                </div>

                <div class="form-group">
                    <label>Sueldo:</label>
                    <InputNumber @bind-Value="Fotografo.Sueldo" class="form-control"  />
                    <ValidationMessage For="@(() => Fotografo.Sueldo)" />
                </div>            

            </form>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>

    <p />



</EditForm>

@code {
    Fotografos Fotografo = new Fotografos();

    [Parameter]
    public int FotografoId { get; set; }



    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        Fotografo = new Fotografos();
    }

    private void Guardar()
    {
        bool guardo;


        guardo = FotografosBLL.Guardar(Fotografo);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = FotografosBLL.Eliminar(Fotografo.FotografoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

    private void Buscar()
    {
        if (Fotografo.FotografoId > 0)
        {
            var encontrado = FotografosBLL.Buscar(Fotografo.FotografoId);

            if (encontrado != null)
                this.Fotografo = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

}
