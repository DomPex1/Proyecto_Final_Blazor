@page "/REventos"
@page "/REventosos/{EventoId:int}"

@using Models
@using BLL

@inject IToastService toast


<EditForm Model="Evento" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro Articulo</h3>
        </div>
        <div class="card-body">
            <form>


                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Evento Id:</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Evento.EventoId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label>Usuario Id:</label>
                    <InputNumber @bind-Value="Evento.UsuarioId" class="form-control" />
                    <ValidationMessage For="@(() => Evento.UsuarioId)" />
                </div>

                <div class="form-group">
                    <label>Fotografo Id:</label>
                    <InputNumber @bind-Value="Evento.FotografoId" class="form-control" />
                    <ValidationMessage For="@(() => Evento.FotografoId)" />
                </div>

                <div class="form-group">
                    <label>Descripcion:</label>
                    <InputText @bind-Value="Evento.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => Evento.Descripcion)" />
                </div>

                <div class="form-group">
                    <label>Lugar:</label>
                    <InputText @bind-Value="Evento.Lugar" class="form-control" />
                    <ValidationMessage For="@(() => Evento.Lugar)" />
                </div>

                <div class="form-group">
                    <label>Categoria:</label>
                    <select id="Categoria_select" @bind="Evento.FotografoId" class="form-control">
                        <option value="" disabled selected>Elija una Categoria</option>
                        @foreach (var item in Lista)
                        {
                            <option value="@item.CategoriaId">@item.Nombre</option>
                        }
                    </select>
                </div>
              

                <div class="form-group">
                    <label>Precio:</label>
                    <InputNumber @bind-Value="Evento.Precio" class="form-control" />
                    <ValidationMessage For="@(() => Evento.Precio)" />
                </div>

                <div class="form-group">
                    <label>Costo:</label>
                    <InputNumber @bind-Value="Evento.Precio" class="form-control" ReadOnly="True" />
                    <ValidationMessage For="@(() => Evento.Precio)" />
                </div>

            </form>
    </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>

    <p />



</EditForm>


@code {

    Eventos Evento = new Eventos();

    [Parameter]
    public int ArticuloId { get; set; }

    private List<Categorias> Lista = new List<Categorias>();

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        Evento = new Eventos();
    }

    private void Guardar()
    {
        bool guardo;

        ArticuloId = 1;
        guardo = EventosBLL.Guardar(Evento);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = EventosBLL.Eliminar(Evento.EventoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

    private void Buscar()
    {
        if (Evento.EventoId > 0)
        {
            var encontrado = EventosBLL.Buscar(Evento.EventoId);

            if (encontrado != null)
                this.Evento = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

}
